// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: server.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (x *RefreshTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Limit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Limit) Reset() {
	*x = Limit{}
	mi := &file_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

func (x *Limit) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Cost struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// integer value, decimal(8, 2) in MySQL
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// currency code, for example RUB
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cost) Reset() {
	*x = Cost{}
	mi := &file_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cost) ProtoMessage() {}

func (x *Cost) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cost.ProtoReflect.Descriptor instead.
func (*Cost) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *Cost) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Cost) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type Car struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Vin           string                 `protobuf:"bytes,3,opt,name=vin,proto3" json:"vin,omitempty"`
	Year          int32                  `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	Default       bool                   `protobuf:"varint,5,opt,name=default,proto3" json:"default,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Car) Reset() {
	*x = Car{}
	mi := &file_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Car) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Car) ProtoMessage() {}

func (x *Car) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Car.ProtoReflect.Descriptor instead.
func (*Car) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

func (x *Car) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Car) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Car) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *Car) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Car) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *Car) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CarCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cars          []*Car                 `protobuf:"bytes,1,rep,name=cars,proto3" json:"cars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CarCollection) Reset() {
	*x = CarCollection{}
	mi := &file_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCollection) ProtoMessage() {}

func (x *CarCollection) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCollection.ProtoReflect.Descriptor instead.
func (*CarCollection) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

func (x *CarCollection) GetCars() []*Car {
	if x != nil {
		return x.Cars
	}
	return nil
}

type FillingStation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FillingStation) Reset() {
	*x = FillingStation{}
	mi := &file_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FillingStation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillingStation) ProtoMessage() {}

func (x *FillingStation) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillingStation.ProtoReflect.Descriptor instead.
func (*FillingStation) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

func (x *FillingStation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FillingStation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FillingStation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type FillingStationCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stations      []*FillingStation      `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FillingStationCollection) Reset() {
	*x = FillingStationCollection{}
	mi := &file_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FillingStationCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillingStationCollection) ProtoMessage() {}

func (x *FillingStationCollection) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillingStationCollection.ProtoReflect.Descriptor instead.
func (*FillingStationCollection) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

func (x *FillingStationCollection) GetStations() []*FillingStation {
	if x != nil {
		return x.Stations
	}
	return nil
}

type Fuel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cost  *Cost                  `protobuf:"bytes,2,opt,name=cost,proto3" json:"cost,omitempty"`
	// integer value, decimal(8, 2) in MySQL
	Value         int32                  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Station       *FillingStation        `protobuf:"bytes,4,opt,name=station,proto3" json:"station,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Distance      int32                  `protobuf:"varint,6,opt,name=distance,proto3" json:"distance,omitempty"`
	Car           *Car                   `protobuf:"bytes,7,opt,name=car,proto3" json:"car,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fuel) Reset() {
	*x = Fuel{}
	mi := &file_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fuel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fuel) ProtoMessage() {}

func (x *Fuel) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fuel.ProtoReflect.Descriptor instead.
func (*Fuel) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9}
}

func (x *Fuel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Fuel) GetCost() *Cost {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *Fuel) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Fuel) GetStation() *FillingStation {
	if x != nil {
		return x.Station
	}
	return nil
}

func (x *Fuel) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Fuel) GetDistance() int32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Fuel) GetCar() *Car {
	if x != nil {
		return x.Car
	}
	return nil
}

func (x *Fuel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type FuelCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fuels         []*Fuel                `protobuf:"bytes,1,rep,name=fuels,proto3" json:"fuels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FuelCollection) Reset() {
	*x = FuelCollection{}
	mi := &file_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuelCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuelCollection) ProtoMessage() {}

func (x *FuelCollection) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuelCollection.ProtoReflect.Descriptor instead.
func (*FuelCollection) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10}
}

func (x *FuelCollection) GetFuels() []*Fuel {
	if x != nil {
		return x.Fuels
	}
	return nil
}

type Currency struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// currency code, for example RUB
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Default       bool                   `protobuf:"varint,4,opt,name=default,proto3" json:"default,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Currency) Reset() {
	*x = Currency{}
	mi := &file_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11}
}

func (x *Currency) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Currency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Currency) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Currency) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *Currency) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DefaultCurrency struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      *Currency              `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DefaultCurrency) Reset() {
	*x = DefaultCurrency{}
	mi := &file_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DefaultCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCurrency) ProtoMessage() {}

func (x *DefaultCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCurrency.ProtoReflect.Descriptor instead.
func (*DefaultCurrency) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12}
}

func (x *DefaultCurrency) GetCurrency() *Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *DefaultCurrency) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type CurrencyCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []*Currency            `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrencyCollection) Reset() {
	*x = CurrencyCollection{}
	mi := &file_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrencyCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyCollection) ProtoMessage() {}

func (x *CurrencyCollection) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyCollection.ProtoReflect.Descriptor instead.
func (*CurrencyCollection) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{13}
}

func (x *CurrencyCollection) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type UserSettings struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultCar      *Car                   `protobuf:"bytes,2,opt,name=default_car,json=defaultCar,proto3" json:"default_car,omitempty"`
	DefaultCurrency *Currency              `protobuf:"bytes,3,opt,name=default_currency,json=defaultCurrency,proto3" json:"default_currency,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UserSettings) Reset() {
	*x = UserSettings{}
	mi := &file_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettings) ProtoMessage() {}

func (x *UserSettings) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettings.ProtoReflect.Descriptor instead.
func (*UserSettings) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{14}
}

func (x *UserSettings) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserSettings) GetDefaultCar() *Car {
	if x != nil {
		return x.DefaultCar
	}
	return nil
}

func (x *UserSettings) GetDefaultCurrency() *Currency {
	if x != nil {
		return x.DefaultCurrency
	}
	return nil
}

func (x *UserSettings) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserSettings) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_server_proto protoreflect.FileDescriptor

const file_server_proto_rawDesc = "" +
	"\n" +
	"\fserver.proto\x12\x14xelbot.com.autonotes\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"F\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"+\n" +
	"\x13RefreshTokenRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"%\n" +
	"\rLoginResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\x1d\n" +
	"\x05Limit\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"8\n" +
	"\x04Cost\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"\xa4\x01\n" +
	"\x03Car\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03vin\x18\x03 \x01(\tR\x03vin\x12\x12\n" +
	"\x04year\x18\x04 \x01(\x05R\x04year\x12\x18\n" +
	"\adefault\x18\x05 \x01(\bR\adefault\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\">\n" +
	"\rCarCollection\x12-\n" +
	"\x04cars\x18\x01 \x03(\v2\x19.xelbot.com.autonotes.CarR\x04cars\"o\n" +
	"\x0eFillingStation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\\\n" +
	"\x18FillingStationCollection\x12@\n" +
	"\bstations\x18\x01 \x03(\v2$.xelbot.com.autonotes.FillingStationR\bstations\"\xd0\x02\n" +
	"\x04Fuel\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12.\n" +
	"\x04cost\x18\x02 \x01(\v2\x1a.xelbot.com.autonotes.CostR\x04cost\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x05R\x05value\x12>\n" +
	"\astation\x18\x04 \x01(\v2$.xelbot.com.autonotes.FillingStationR\astation\x12.\n" +
	"\x04date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x1a\n" +
	"\bdistance\x18\x06 \x01(\x05R\bdistance\x12+\n" +
	"\x03car\x18\a \x01(\v2\x19.xelbot.com.autonotes.CarR\x03car\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"B\n" +
	"\x0eFuelCollection\x120\n" +
	"\x05fuels\x18\x01 \x03(\v2\x1a.xelbot.com.autonotes.FuelR\x05fuels\"\x97\x01\n" +
	"\bCurrency\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x18\n" +
	"\adefault\x18\x04 \x01(\bR\adefault\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"c\n" +
	"\x0fDefaultCurrency\x12:\n" +
	"\bcurrency\x18\x01 \x01(\v2\x1e.xelbot.com.autonotes.CurrencyR\bcurrency\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\"T\n" +
	"\x12CurrencyCollection\x12>\n" +
	"\n" +
	"currencies\x18\x01 \x03(\v2\x1e.xelbot.com.autonotes.CurrencyR\n" +
	"currencies\"\x9b\x02\n" +
	"\fUserSettings\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12:\n" +
	"\vdefault_car\x18\x02 \x01(\v2\x19.xelbot.com.autonotes.CarR\n" +
	"defaultCar\x12I\n" +
	"\x10default_currency\x18\x03 \x01(\v2\x1e.xelbot.com.autonotes.CurrencyR\x0fdefaultCurrency\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt2\xbb\x01\n" +
	"\x04Auth\x12S\n" +
	"\bGetToken\x12\".xelbot.com.autonotes.LoginRequest\x1a#.xelbot.com.autonotes.LoginResponse\x12^\n" +
	"\fRefreshToken\x12).xelbot.com.autonotes.RefreshTokenRequest\x1a#.xelbot.com.autonotes.LoginResponse2\xab\x03\n" +
	"\x0eUserRepository\x12F\n" +
	"\aGetCars\x12\x16.google.protobuf.Empty\x1a#.xelbot.com.autonotes.CarCollection\x12Q\n" +
	"\rGetCurrencies\x12\x16.google.protobuf.Empty\x1a(.xelbot.com.autonotes.CurrencyCollection\x12S\n" +
	"\x12GetDefaultCurrency\x12\x16.google.protobuf.Empty\x1a%.xelbot.com.autonotes.DefaultCurrency\x12M\n" +
	"\x0fGetUserSettings\x12\x16.google.protobuf.Empty\x1a\".xelbot.com.autonotes.UserSettings\x12Z\n" +
	"\x10SaveUserSettings\x12\".xelbot.com.autonotes.UserSettings\x1a\".xelbot.com.autonotes.UserSettings2\x81\x02\n" +
	"\x0eFuelRepository\x12M\n" +
	"\bGetFuels\x12\x1b.xelbot.com.autonotes.Limit\x1a$.xelbot.com.autonotes.FuelCollection\x12\\\n" +
	"\x12GetFillingStations\x12\x16.google.protobuf.Empty\x1a..xelbot.com.autonotes.FillingStationCollection\x12B\n" +
	"\bSaveFuel\x12\x1a.xelbot.com.autonotes.Fuel\x1a\x1a.xelbot.com.autonotes.FuelB$Z\"xelbot.com/auto-notes/server/protob\x06proto3"

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData []byte
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_proto_rawDesc), len(file_server_proto_rawDesc)))
	})
	return file_server_proto_rawDescData
}

var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_server_proto_goTypes = []any{
	(*LoginRequest)(nil),             // 0: xelbot.com.autonotes.LoginRequest
	(*RefreshTokenRequest)(nil),      // 1: xelbot.com.autonotes.RefreshTokenRequest
	(*LoginResponse)(nil),            // 2: xelbot.com.autonotes.LoginResponse
	(*Limit)(nil),                    // 3: xelbot.com.autonotes.Limit
	(*Cost)(nil),                     // 4: xelbot.com.autonotes.Cost
	(*Car)(nil),                      // 5: xelbot.com.autonotes.Car
	(*CarCollection)(nil),            // 6: xelbot.com.autonotes.CarCollection
	(*FillingStation)(nil),           // 7: xelbot.com.autonotes.FillingStation
	(*FillingStationCollection)(nil), // 8: xelbot.com.autonotes.FillingStationCollection
	(*Fuel)(nil),                     // 9: xelbot.com.autonotes.Fuel
	(*FuelCollection)(nil),           // 10: xelbot.com.autonotes.FuelCollection
	(*Currency)(nil),                 // 11: xelbot.com.autonotes.Currency
	(*DefaultCurrency)(nil),          // 12: xelbot.com.autonotes.DefaultCurrency
	(*CurrencyCollection)(nil),       // 13: xelbot.com.autonotes.CurrencyCollection
	(*UserSettings)(nil),             // 14: xelbot.com.autonotes.UserSettings
	(*timestamppb.Timestamp)(nil),    // 15: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),            // 16: google.protobuf.Empty
}
var file_server_proto_depIdxs = []int32{
	15, // 0: xelbot.com.autonotes.Car.created_at:type_name -> google.protobuf.Timestamp
	5,  // 1: xelbot.com.autonotes.CarCollection.cars:type_name -> xelbot.com.autonotes.Car
	15, // 2: xelbot.com.autonotes.FillingStation.created_at:type_name -> google.protobuf.Timestamp
	7,  // 3: xelbot.com.autonotes.FillingStationCollection.stations:type_name -> xelbot.com.autonotes.FillingStation
	4,  // 4: xelbot.com.autonotes.Fuel.cost:type_name -> xelbot.com.autonotes.Cost
	7,  // 5: xelbot.com.autonotes.Fuel.station:type_name -> xelbot.com.autonotes.FillingStation
	15, // 6: xelbot.com.autonotes.Fuel.date:type_name -> google.protobuf.Timestamp
	5,  // 7: xelbot.com.autonotes.Fuel.car:type_name -> xelbot.com.autonotes.Car
	15, // 8: xelbot.com.autonotes.Fuel.created_at:type_name -> google.protobuf.Timestamp
	9,  // 9: xelbot.com.autonotes.FuelCollection.fuels:type_name -> xelbot.com.autonotes.Fuel
	15, // 10: xelbot.com.autonotes.Currency.created_at:type_name -> google.protobuf.Timestamp
	11, // 11: xelbot.com.autonotes.DefaultCurrency.currency:type_name -> xelbot.com.autonotes.Currency
	11, // 12: xelbot.com.autonotes.CurrencyCollection.currencies:type_name -> xelbot.com.autonotes.Currency
	5,  // 13: xelbot.com.autonotes.UserSettings.default_car:type_name -> xelbot.com.autonotes.Car
	11, // 14: xelbot.com.autonotes.UserSettings.default_currency:type_name -> xelbot.com.autonotes.Currency
	15, // 15: xelbot.com.autonotes.UserSettings.created_at:type_name -> google.protobuf.Timestamp
	15, // 16: xelbot.com.autonotes.UserSettings.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 17: xelbot.com.autonotes.Auth.GetToken:input_type -> xelbot.com.autonotes.LoginRequest
	1,  // 18: xelbot.com.autonotes.Auth.RefreshToken:input_type -> xelbot.com.autonotes.RefreshTokenRequest
	16, // 19: xelbot.com.autonotes.UserRepository.GetCars:input_type -> google.protobuf.Empty
	16, // 20: xelbot.com.autonotes.UserRepository.GetCurrencies:input_type -> google.protobuf.Empty
	16, // 21: xelbot.com.autonotes.UserRepository.GetDefaultCurrency:input_type -> google.protobuf.Empty
	16, // 22: xelbot.com.autonotes.UserRepository.GetUserSettings:input_type -> google.protobuf.Empty
	14, // 23: xelbot.com.autonotes.UserRepository.SaveUserSettings:input_type -> xelbot.com.autonotes.UserSettings
	3,  // 24: xelbot.com.autonotes.FuelRepository.GetFuels:input_type -> xelbot.com.autonotes.Limit
	16, // 25: xelbot.com.autonotes.FuelRepository.GetFillingStations:input_type -> google.protobuf.Empty
	9,  // 26: xelbot.com.autonotes.FuelRepository.SaveFuel:input_type -> xelbot.com.autonotes.Fuel
	2,  // 27: xelbot.com.autonotes.Auth.GetToken:output_type -> xelbot.com.autonotes.LoginResponse
	2,  // 28: xelbot.com.autonotes.Auth.RefreshToken:output_type -> xelbot.com.autonotes.LoginResponse
	6,  // 29: xelbot.com.autonotes.UserRepository.GetCars:output_type -> xelbot.com.autonotes.CarCollection
	13, // 30: xelbot.com.autonotes.UserRepository.GetCurrencies:output_type -> xelbot.com.autonotes.CurrencyCollection
	12, // 31: xelbot.com.autonotes.UserRepository.GetDefaultCurrency:output_type -> xelbot.com.autonotes.DefaultCurrency
	14, // 32: xelbot.com.autonotes.UserRepository.GetUserSettings:output_type -> xelbot.com.autonotes.UserSettings
	14, // 33: xelbot.com.autonotes.UserRepository.SaveUserSettings:output_type -> xelbot.com.autonotes.UserSettings
	10, // 34: xelbot.com.autonotes.FuelRepository.GetFuels:output_type -> xelbot.com.autonotes.FuelCollection
	8,  // 35: xelbot.com.autonotes.FuelRepository.GetFillingStations:output_type -> xelbot.com.autonotes.FillingStationCollection
	9,  // 36: xelbot.com.autonotes.FuelRepository.SaveFuel:output_type -> xelbot.com.autonotes.Fuel
	27, // [27:37] is the sub-list for method output_type
	17, // [17:27] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_proto_rawDesc), len(file_server_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
